apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    api 'androidx.appcompat:appcompat:1.0.2'
    api 'androidx.core:core-ktx:1.0.2'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'
    api 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    api 'com.google.android.material:material:1.0.0'


    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.2"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.2.2"


    api "io.reactivex.rxjava2:rxandroid:+"
    api 'io.reactivex:rxkotlin:1.0.0'


    api 'com.jakewharton.rx2:replaying-share:2.1.1'
    api "com.jakewharton.rxbinding2:rxbinding:2.2.0"
    api "com.f2prateek.rx.preferences2:rx-preferences:2.0.0"
    api 'com.github.tbruyelle:rxpermissions:0.10.2'
    api "com.hendraanggrian.material:collapsingtoolbarlayout-subtitle:1.0.0"


    api "com.trello.rxlifecycle3:rxlifecycle:3.0.0"
    // If you want to bind to Android-specific lifecycles
    api "com.trello.rxlifecycle3:rxlifecycle-android:3.0.0"
    // If you want pre-written Activities and Fragments you can subclass as providers
    //implementation "com.trello.rxlifecycle3:rxlifecycle-components:3.0.0"
    // If you want pre-written support preference Fragments you can subclass as providers
    //implementation "com.trello.rxlifecycle3:rxlifecycle-components-preference:3.0.0"
    // If you want to use Android Lifecycle for providers
    api "com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.0.0"
    // If you want to use Kotlin syntax
    api "com.trello.rxlifecycle3:rxlifecycle-kotlin:3.0.0"
    // If you want to use Kotlin syntax with Android Lifecycle
    api "com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.0.0"


    api "io.arrow-kt:arrow-optics:0.9.0"
    api "io.arrow-kt:arrow-syntax:0.9.0"
    kapt "io.arrow-kt:arrow-meta:0.9.0"
}
